<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>凝萌小记</title>
    <description>作家是杂家</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 13 May 2018 23:02:00 +0800</pubDate>
    <lastBuildDate>Sun, 13 May 2018 23:02:00 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Batch Gradient Descent</title>
        <description>&lt;h2 id=&quot;0-前言&quot;&gt;0. 前言&lt;/h2&gt;

&lt;p&gt;上一次写blog居然已经是4个月之前了，这学期课虽不多，但各种零零散散的事情总是在忙，再加上上半学期几乎天天都要早起，也不知道为什么我还天天都晚睡，然后就很累。&lt;/p&gt;

&lt;p&gt;这周是期中考假期，一周下来好像没干啥，值得纪念的就是天天在外面各种地方吃了许多奇奇怪怪的好吃的，嗯，真难得有机会出去玩。昨天在机房值班，天气颇好，卡了很久的作业又有了做下去的方向，心情十分舒畅，于是花了一个多小时造了个轮子（写了一个梯度下降）。稍微整理一下，写一篇blog当作笔记吧。&lt;/p&gt;

&lt;p&gt;讲真，到现在为止我也没有自己实现过梯度下降的算法，于是我很兴奋地就开始干了。&lt;/p&gt;

&lt;p&gt;梯度下降原理很简单，我也不知道为什么各种书讲得很不清楚（其实是太多细节导致乍一看抓不住主干）。&lt;/p&gt;

&lt;p&gt;梯度下降和最小二乘法有点像，梯度下降可以用来求解最小二乘法问题，但除此之外，还能求解其他得优化问题。&lt;/p&gt;

&lt;p&gt;可以说，只要是函数，都能用梯度下降来求最小值，不过求到得也只能是局部最小值。&lt;/p&gt;

&lt;h2 id=&quot;1-机器学习的套路&quot;&gt;1. 机器学习的套路&lt;/h2&gt;

&lt;p&gt;不管你听哪个老师的课，看哪一本机器学习的书，一开始讲有监督学习时基本上是这个三步走套路，我称之为HLO——Hypothesis，Loss，Optimization。&lt;/p&gt;

&lt;p&gt;首先要明确有监督学习要解决的问题：给定特征x，求一个y。这个y可以是连续的、也可以是离散的，y连续时就是回归问题，y离散时就是分类问题。如果我给了你很多x和对应的y，下次我给你新的x你能不能算出对应的y呢？&lt;/p&gt;

&lt;h6 id=&quot;1-hypothesis&quot;&gt;[1] Hypothesis&lt;/h6&gt;

&lt;p&gt;对于一个n维向量&lt;img src=&quot;/img/in-post/2018051301/math01.png&quot; alt=&quot;x&quot; /&gt;定义函数&lt;img src=&quot;/img/in-post/2018051301/math02.png&quot; alt=&quot;htx&quot; /&gt;该函数称为Hypothesis，我们假设通过该函数可以算出预测值。值得一提的是，这里的m维向量&lt;img src=&quot;/img/in-post/2018051301/math03.png&quot; alt=&quot;htx&quot; /&gt;
是参数，θ只要确定了，函数就能确定，但因为有很多个θ，所以Hypothesis可以看成是一个函数集合，我们要做的就是从所有thata的组合中找出最优秀的θ，确定h(x)。&lt;/p&gt;

&lt;h6 id=&quot;2-loss&quot;&gt;[2] Loss&lt;/h6&gt;

&lt;p&gt;算出的预测值和真实值y还是有区别的，所以我们定义了一个Loss函数&lt;img src=&quot;/img/in-post/2018051301/math04.png&quot; alt=&quot;loss&quot; /&gt;以量化这种区别，一般来说我们会使得Loss随着预测值接近真实值y而变小。&lt;/p&gt;

&lt;h6 id=&quot;3-optimization&quot;&gt;[3] Optimization&lt;/h6&gt;

&lt;p&gt;对于同样的x，不同的θ算出不同的预测值，因此Loss也会不同，所谓“最优秀的”θ，就是使得Loss最小的θ嘛！那么，我们实际上就是求Loss的最值问题，也就是优化问题（Optimization）。&lt;/p&gt;

&lt;h2 id=&quot;2-least-square&quot;&gt;2. Least Square&lt;/h2&gt;

&lt;p&gt;说起Gradient Descent就会让人想起Least Square。&lt;/p&gt;

&lt;p&gt;我们看看Loss函数，简单粗暴地算预测值和真实值y的差，取平方去掉正负号，故有&lt;img src=&quot;/img/in-post/2018051301/math05.png&quot; alt=&quot;x&quot; /&gt;
这里N是所有训练样本，这个函数越小，预测值自然越接近真实值y。&lt;/p&gt;

&lt;p&gt;最值处的必要条件就是导数为零（最值点必为极值点），于是，简单粗暴地求偏导并使之为零。&lt;img src=&quot;/img/in-post/2018051301/math06.png&quot; alt=&quot;p0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;解这个方程，解的θ就是极值点。对于L为凸函数的问题，该方程只有一个解，非凸的话自然有多个解，如果能求到多个解自然可以比较多个解里面那个θ更优秀啦，可是很难把所有解都找出来。&lt;/p&gt;

&lt;p&gt;凸函数问题的话，最典型的就是线性回归了，一般我们第一次接触最小二乘都是在学线性回归的时候，也就是定义&lt;img src=&quot;/img/in-post/2018051301/math07.png&quot; alt=&quot;p0&quot; /&gt;考虑bias的话
&lt;img src=&quot;/img/in-post/2018051301/math08.png&quot; alt=&quot;x_bias&quot; /&gt;
然后求Loss的的偏导数，直接解方程，可以得到具体得公式，这种可以将解用通式表示的解的形式叫closed-form。不是closed-form的可以用迭代法来求解，迭代法常用的有Newton’s Method，还有就是我们这里的Gradient Descent了。&lt;/p&gt;

&lt;p&gt;小结一下：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;最小二乘的本质就是定义了一个Loss函数。&lt;br /&gt;
梯度下降是求解最小二乘的一种算法。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-gradient-descent&quot;&gt;3. Gradient Descent&lt;/h2&gt;

&lt;p&gt;然后我们就开始讲Gradient Descent了。&lt;/p&gt;

&lt;p&gt;我们可以暂时忘记最小二乘了，要把握住算法，最重要地是丢掉细枝末节，我们这里地Loss是可以任意定义地，它就是一个函数&lt;img src=&quot;/img/in-post/2018051301/math04.png&quot; alt=&quot;loss&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们的问题仍旧是：找一个θ使得Loss最小。&lt;/p&gt;

&lt;p&gt;梯度下降的做法是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;先随便瞎猜一个θ;&lt;/li&gt;
  &lt;li&gt;然后把Loss看成θ的函数,计算Loss的梯度∇L，根据梯度更新θ;&lt;/li&gt;
  &lt;li&gt;不断重复第2步使得Loss基本不变.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;更新梯度的公式为&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2018051301/math09.png&quot; alt=&quot;gd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里的α是学习率，简单理解就是参数更新的步长，从初始的θ开始移动改变θ，算出的梯度∇L是运动的方向，而α则是我们移动的步长了。常见的说法就是，在山地里面我们不断寻找最陡峭的地方往下走，这样总会找到一个局部最低点。&lt;/p&gt;

&lt;p&gt;有一个无聊的人（误）录了一个视频 &lt;a href=&quot;https://www.youtube.com/watch?v=1_HBTJyWgNA&amp;amp;index=6&amp;amp;list=PLJV_el3uVTsPy9oCRY30oBPNLCo89yu49&quot;&gt;李宏毅 - ML Lecture 3-2: Gradient Descent (Demo by AOE)&lt;/a&gt;，讲世纪帝国里是怎么做的Gradient Descent的。&lt;/p&gt;

&lt;h2 id=&quot;4-计算梯度&quot;&gt;4. 计算梯度&lt;/h2&gt;

&lt;p&gt;以上提到的最难的步骤就是计算梯度∇L了，实际上就是分别对各个θ求偏导数而已&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2018051301/math10.png&quot; alt=&quot;grad&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里的t是指当前已经迭代的次数，而我们知道求偏导数实际就是求一元倒数，所谓导数就是：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2018051301/math11.png&quot; alt=&quot;div&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们将h设成一个很小很小的数，直接代入就能求到近似解了，求到梯度之后就是不断重复迭代就行了。&lt;/p&gt;

&lt;h2 id=&quot;5-python实现&quot;&gt;5. Python实现&lt;/h2&gt;

&lt;p&gt;首先定义Hypothesis Function和Loss Function：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# define hypothesis function&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hypothesis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# define you hypothesis function here...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# define loss function&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# define you loss function here...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hypothesis就是我们的机器学习模型，定义成参数和特征（自变量）的函数，基于Hypothesis定义合适的Loss，一般来说Loss的输入包括了Hypothesis的输入，同时还需要输入实际值/Ground True（因变量）。&lt;/p&gt;

&lt;p&gt;这里没有定义具体的Hypothesis和Loss，因为我们主要目的是实现梯度下降的算法。&lt;/p&gt;

&lt;p&gt;再次明确我们的目的：优化Loss，求使得Loss为局部最小值时的θ。&lt;/p&gt;

&lt;p&gt;首先,定义计算梯度的函数，该函数的输入和Loss一样，这里的是依次对各个求导，注意自变量是P，输入X、Y一般是训练样本。直接用导数的定义公式，把dh设成1e-7(足够小的值)。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# count gradient&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1e-7&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后定义每一次迭代更新参数的方法，也就是输入当前参数，返回下一参数。每一次计算就是参数减去学习率乘以梯度。最后整个BGD的实现就是循环多次这一步而已。这里lr就是学习率，init_P是初始的参数，X、Y是训练样本，niter是迭代次数，这里每迭代一定次数（vbose）打印一下当前的Loss。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# BGD Algorithm&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BGD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;niter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_P&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;niter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vbose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;iter:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s, loss: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;6-例子&quot;&gt;6. 例子&lt;/h2&gt;

&lt;p&gt;为了测试我们的算法，我写了两个例子，试运行了一下。&lt;/p&gt;

&lt;h5 id=&quot;1-多元线性回归&quot;&gt;1. 多元线性回归&lt;/h5&gt;

&lt;p&gt;定义多元线性回归的函数，h(X)=PX。基于最小二乘原理定义损失函数。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;def hypothesis(P, X):
    # h(X) = PX
    bias = np.ones(X.shape[:-1])
    input_ = np.insert(X, -1, bias, axis=-1)  # channel_last
    return np.dot(input_, P)

def loss(P, X, Y):
    # Square Loss
    d = (Y - hypothesis(P, X)) ** 2
    return np.sum(d) / len(d)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成一些随机样本，这里设置3个自变量，因此有4个参数（还有一个常数项），生成2000个随机的X并求出对应Y。这里还加了一点噪声。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;X = np.random.rand(2000, 3)                                # random samples
para_t = np.array([115, -12, -3, 44],dtype=np.float64)     # true_parameters
Y = hypothesis(para_t, X) + np.random.rand(1)
print(X)
print(Y)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为是凸优化，所以是唯一解，不用考虑局部最优，所有随意初始化都能求到结果啦。那我们初始化参数设为0，开始训练，然后把参数打印一下。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;para = np.array([0, 0, 0, 0],dtype=np.float64)              # init_para
print(&quot;Para_h: %s&quot; % BGD(0.01, 10000, para, X, Y))
print(&quot;Para_t: %s&quot; % para_t)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iter:0, loss: 6051.55206953
iter:1000, loss: 51.0304688772
iter:2000, loss: 5.0273756556
iter:3000, loss: 0.68016847629
iter:4000, loss: 0.101467038909
iter:5000, loss: 0.0154896290322
iter:6000, loss: 0.00237660362235
iter:7000, loss: 0.000365047416709
iter:8000, loss: 5.60845545895e-05
iter:9000, loss: 8.61695483353e-06
Para_h: [ 114.99777458  -12.0023768    -2.05467269   43.99780741]
Para_t: [ 115.  -12.   -3.   44.]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para_h是我们拟合出来的参数，Para_t是真实的参数（基于这个函数生成模拟样本的），解这个就是a peace of cake啦。&lt;/p&gt;

&lt;h5 id=&quot;2-简单的人工神经网络&quot;&gt;2. 简单的人工神经网络&lt;/h5&gt;

&lt;p&gt;数据是Nerlove收集的1955年145家美国电力企业的总成本(TC)、产量(Q)、工资率(PL)、燃料价格(PF)及资本租赁价格(PK)，X为(Q, PL, PF, PK)，Y为TC。&lt;/p&gt;

&lt;p&gt;别听神经网络好像很腻害的样子，本质就是花式堆叠广义线性回归。还是先定义Hypothesis和Loss，这里定义了一个reLU函数作为激活函数，Hypothesis是一个只有两个隐含层的神经网络，输入层有4个神经元，第一层有6个神经元，第二层有3个神经元，一共有47个参数。&lt;/p&gt;

&lt;p&gt;reLU定义如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2018051301/math12.png&quot; alt=&quot;div&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;def reLU(X):
    return X * (X &amp;gt; 0)

def hypothesis(P, X):
    # ANN(2 Layers)
    p1 = P[:5]
    p2 = P[5:10]
    p3 = P[10:]
    bias = np.ones(X.shape[:-1])
    input_ = np.insert(X, -1, bias, axis=-1)  # channel_last
    nn11 = reLU(np.dot(input_, p1))
    nn12 = reLU(np.dot(input_, p2))
    nn1 = np.stack([nn11, nn12, bias], axis=-1)
    return reLU(np.dot(nn1, p3))

def loss(P, X, Y):
    # Square Loss
    d = (Y - hypothesis(P, X)) ** 2
    return np.sum(d) / len(d)

# Load Data
data = np.loadtxt(r'data.csv', delimiter=',')
Y = data[:, 0]
X = data[:, 1:]
X.shape            # (145L, 4L)

# get train sample and test sample
N = 100
Ytrain = Y[:N]
Xtrain = X[:N, :]
Ytest = Y[N:]
Xtest = X[N:, :]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一共145个样本，我们用100个做训练，45个做测试，先跑一下。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;para = np.random.rand(47)
print(para)
print(BGD(1e-3, 5000, para, Xtrain, Ytrain, 1000))
print(&quot;RMSE:%s&quot; % loss(para, Xtest, Ytest) ** 0.5)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iter:0, loss: 32.43822935
iter:1000, loss: 32.43822935
iter:2000, loss: 32.43822935
iter:3000, loss: 32.43822935
iter:4000, loss: 32.43822935
RMSE:41.5248204328
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;发现结果坏掉了，打印一下预测值，发现全部变成0了，再打印一下梯度。发现梯度全是0，这就是传说中的Gradient Vanish，在神经网络多层传播后，参数的变动很有可能无法计算出梯度（梯度弥散，Gradient Vanish），又或者参数的微微变动就会导致梯度骤变（梯度爆炸，Gradient Explosion）。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Y_hat, Y, dY
[[  -0.      11.982   11.982]
 [  -0.      16.674   16.674]
 [  -0.      12.62    12.62 ]
 [  -0.      12.905   12.905]
 ...]
...
 [ 0.  0.  ...  0.  0.]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;事实上我们这里算出来的梯度也是很大的，因此把学习率调成了一个很小的值（1e-7），再多跑几次（使得初始化参数落到了一个比较好的位置上）。出来的结果还是能看的。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iter:0, loss: 56115.2138837
iter:1000, loss: 2.58377124655
iter:2000, loss: 2.20030671483
iter:3000, loss: 1.88540868509
iter:4000, loss: 1.6693258371
RMSE:10.2699172204
...
Y_hat, Y, dY
[[  12.94779536   11.982        -0.96579536]
 [  13.91592103   16.674         2.75807897]
 [  14.50662844   12.62         -1.88662844]
 [  13.98164501   12.905        -1.07664501]
 ...]
...
[  186.86534503 -4.51131314 ... 2328.47006998 4.02859825]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;7-总结&quot;&gt;7. 总结&lt;/h2&gt;

&lt;p&gt;大概写了一下BGD的笔记，还是有一点收获的，也算是加深了对梯度下降理解啦。&lt;/p&gt;

&lt;p&gt;不过不知道为什么，代码只写了不到一个小时，写blog却写了一天（心累）。&lt;/p&gt;

&lt;p&gt;代码已上传到&lt;a href=&quot;https://github.com/codeRimoe/ML_demo/tree/master/MLD01_BGD&quot;&gt;Github - MLD01_BGD&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;2018.05.13 晚上 于广州&lt;/p&gt;
</description>
        <pubDate>Sun, 13 May 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/05/13/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/05/13/post01/</guid>
        
        <category>机器学习</category>
        
        <category>深度学习</category>
        
        <category>算法</category>
        
        
      </item>
    
      <item>
        <title>随笔偶成</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;知乎上，看到了一个问题，如何评价&lt;a href=&quot;http://mp.weixin.qq.com/s/nZulTHBPbd9Panc7XSciyQ&quot;&gt;《可怕的是，我们的孩子一直在通过动漫认识世界》&lt;/a&gt;一文。于是我便写了本文，原回答为&lt;a href=&quot;https://www.zhihu.com/question/265391277/answer/293707377&quot;&gt;如何评价《可怕的是，我们的孩子一直在通过动漫认识世界》一文？ - 罗玥的回答 - 知乎&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;总的来说，&lt;strong&gt;原文借“动漫”这一个热点，以一个不当的点切题，举一系列不正确的例证，来说明一个正常人都应该知道的常识&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;1-片面描述动画内容错误引导读者&quot;&gt;1. 片面描述动画内容，错误引导读者&lt;/h2&gt;

&lt;p&gt;原文取优酷和B站前三来作为“孩子“群体的动漫观影偏好，这一点本身是有偏的，优酷、B站的用户群年龄文中未考虑，而而且原文未作对“孩子”的定义。&lt;/p&gt;

&lt;p&gt;此外，原文对动漫作品的污名化可以说是十分不讲道理了。&lt;/p&gt;

&lt;p&gt;原文对《火影忍者》是这样描述的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;总的来说，《火影忍者》是一部针对性的描写仇恨的作品，因此也有一定的悲剧成分在里面，主题的最终目的性是于化解仇恨，歌颂和平，但&lt;strong&gt;内容方面以战斗和厮杀为主&lt;/strong&gt;。抛开里面的暴力画面，他的三观细看有许多扭曲的地方。&lt;br /&gt;
比如主角每次都喊着一个伟大的目标“我要当火影”，但平时却不怎么努力，&lt;strong&gt;总是拥有“主角特殊光环”&lt;/strong&gt;，一遇到事儿就临时抱佛脚，还总是能化险为夷；&lt;br /&gt;
比如故事中的友情观也是奇葩，&lt;strong&gt;为了保护朋友什么事儿都干得出来&lt;/strong&gt;，是一种非常偏激的友情观，爱情也是一样，基本都是生离死别，十分沉重；&lt;br /&gt;
比如其中的正义也是非常奇葩，很多台词都是正义的旗号，但基本上都非常肤浅又莫名其妙，男二号“佐助”的正义观更是满腹槽点，但却被很多粉丝着迷，&lt;strong&gt;这其中的人物极端理想化，正义极端化，盲目的积极向上&lt;/strong&gt;，盲目的友谊和爱情，对于异己一律都是强行洗脑模式，也难怪被认定成年观众级别。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这段批驳，我认为是不成立的，至少这一段话套在别的作品中同样成立。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;总的来说，&lt;strong&gt;抗日电视剧&lt;/strong&gt;是一系列针对性的描写仇恨的作品，因此也有一定的悲剧成分在里面，主题的最终目的性是于化解仇恨，歌颂和平，但&lt;strong&gt;内容方面以战斗和厮杀为主&lt;/strong&gt;。抛开里面的暴力画面，他的三观细看有许多扭曲的地方。&lt;br /&gt;
比如主角每次都喊着一个伟大的目标&lt;strong&gt;“打倒日本帝国主义”&lt;/strong&gt;，但总是拥有“主角特殊光环”，一遇到事儿总是能化险为夷；&lt;br /&gt;
比如故事中的&lt;strong&gt;爱国观&lt;/strong&gt;也是奇葩，&lt;strong&gt;为了保护战友和国家什么事儿都干得出来&lt;/strong&gt;，是一种非常偏激的&lt;strong&gt;价值观&lt;/strong&gt;，爱情也是一样，基本都是生离死别，十分沉重；&lt;br /&gt;
比如其中的正义也是非常奇葩，很多台词都是正义的旗号，但基本上都非常肤浅又莫名其妙，&lt;strong&gt;这其中的人物极端理想化，正义极端化，盲目的积极向上&lt;/strong&gt;，盲目的&lt;strong&gt;爱国&lt;/strong&gt;和爱情，对于异己一律都是强行洗脑模式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;（此外，文中还提到大部分动漫作品&lt;strong&gt;追求和平的手段依然是暴力&lt;/strong&gt;，而且，他认为这是扭曲的价值观。而这个价值观并没有扭曲，在别无他法的时候，采用暴力追求和平是没有错的。大家总是瞎嚷嚷“犯我中华者虽远必诛”的时候并没有认为自己价值观有问题吧？南京起义的时候、抗日战争的时候，不扛起枪谁给你和平？在恐怖分子咄咄逼人的时候，是谁维护我们社会的和平？非暴力不抵抗的甘地吗？要知道，日常维持法律的公安、检察、法院、监狱的本质就是暴力机关。虽然跑题了，但这点还希望原文作者思考一下。）&lt;/p&gt;

&lt;p&gt;对《干物妹小埋》的描述也是主观带着偏见的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;这部动漫主要讲述的也就是小埋和哥哥在一起的“吃、睡、玩”的干物妹生活，主角小埋&lt;strong&gt;又懒又馋可是漂亮&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“小埋又懒又馋可是漂亮”这样的表述明显是有偏向性的，文中还列出一系列的截图，反映了小埋在家里懒散的一面，却对小埋在学校在其他人面前的优秀表现避而不谈，以证明该动漫三观不正的结论。小埋这一角色最大的特点就是，既有外人面前优秀的一面，又有对哥哥撒娇的一面，仅以一面作为对作品中的角色进行描述都是有失偏颇的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;就连制作组在制作时也刻意回避了小埋他哥为什么要忍受小埋的任性，而对小埋一再纵容和宠爱。因为这个问题是个炸弹，无论怎么去解释处理，小埋这么做都是不合理而且错误的。只会加大观众的厌恶感和不适感。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;制作组从未回避过小埋哥哥对小埋的态度，如果你真的了解过这一部作品，你就知道，小埋哥哥对小埋的懒散并没有纵容，对于小埋在家的懒散表现，小埋哥哥总是会厉声训斥的。&lt;/p&gt;

&lt;p&gt;《干物妹小埋》这部作品中最突出表现的是小埋日常和他的好朋友们玩耍学习的场景，可以说是三观十分正确的一部作品了。&lt;/p&gt;

&lt;p&gt;不知原文作者是对动画很了解还是很不了解，在他笔下任何一个动画都能以特殊的视角描述成反面的，更具体地说，&lt;strong&gt;任何一个作品都能被描述成反面的&lt;/strong&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;有一些动漫，儿童观看确实过于血腥，比如文化部就曾禁止过一批动漫，但这些动漫并没有在网络上停止传播，孩子依然可能会看到，而且像《寄生兽》、《东京食尸鬼》、《黑执事》和《进击的巨人》这些还很火。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当然这里&lt;strong&gt;不否认动漫中存在一些血腥、暴力的行为&lt;/strong&gt;。“有一些动漫，儿童观看确实过于血腥”，对于文中这一点，我是十分认同的。可是，这类作品本身就不是面向儿童群体的，在日本，这一类的动画播放时间是深夜凌晨，刻意回避了儿童群体，此外，在国外，影视作品分级制度十分完善，因此，儿童很难会受到作品的影响。然而，在中国的情况却是一刀切，我们可以看到一些优秀的作品被禁播，同时另一些儿童不宜的作品却允许全年龄人群观看。去年，《战狼》热播，在电影院里我看到有家长带着孩子来看，其中一些血腥的打斗场景难道不也是儿童不宜吗？&lt;strong&gt;缺乏分级制度，才是导致儿童观影时接受不宜信息的根本原因&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;2-以错误例子夸大动漫的不良影响&quot;&gt;2. 以错误例子夸大动漫的不良影响：&lt;/h2&gt;

&lt;p&gt;文中举了数例案件，以图证明动漫对人产生不良影响。其例证大致可以分为以下两类：&lt;/p&gt;

&lt;h5 id=&quot;1-成年人的不理智行为&quot;&gt;1. 成年人的不理智行为&lt;/h5&gt;

&lt;p&gt;原文作者以“你要扣了我的车，我就毁灭地球”、“90后女效仿红太郎将70后老公拍成植物人”这两例案件举例，以图例证动漫导致这些不良后果。&lt;/p&gt;

&lt;p&gt;但是看动漫的人这么多，能出这种新闻的人有几个？以偏概全，&lt;strong&gt;用几个离群值表征全体样本&lt;/strong&gt;，这种低级的统计错误在原文作者的包装下，变成了误导读者的trick。一个人成长过程中，价值观没有培养好，无论他有没有看动漫，他最终都会做出类似的事情。诚然，动漫对一个人价值观的形成是有影响的，可是我不认为这种影响一定是负面的。就像科学对人的价值观的影响，有人最终成为学者，有人最终成为民科，你不能就此说科学对人的影响是正面还是负面的。&lt;/p&gt;

&lt;h5 id=&quot;2-未成年人的不良行为&quot;&gt;2. 未成年人的不良行为&lt;/h5&gt;

&lt;p&gt;“模仿动画片跳楼”、“偷钱买书”、“模仿猪叫”这几例，则是着重表现动漫导致“未成年人的不良行为”。&lt;/p&gt;

&lt;p&gt;首先，“模仿动画片跳楼”中的责任不在动画片，而在监护人。在我国法律中，8岁以下属于“无民事行为能力人”，8-16岁或16-18岁不以自己收入为生活来源的人属于“限制民事行为能力人”。对于未成年人的不良行为，难道不是监护人未做好监管职责吗？幼童坠落事件在家长监护下是不应该发生的。几个月前，我陪我的小外甥女玩，他套上游泳圈说要去马路上游泳，我跟他说不可以。同样地，如果一个小朋友说要飞起来，你会让他跳下去吗？作为儿童地陪同人，就应该负起自己地监管责任。&lt;/p&gt;

&lt;p&gt;至于“偷钱买书”、“模仿猪叫”这些例证根本就站不住脚，谁小时候没犯过错误，谁小时候没干过蠢蠢的事情？我小时候就经常偷家里的零钱去买辣条，也经常和隔壁家的男孩子比赛看谁叫的更像门口的那只黄狗。但我最后不也好好地长大吗？至少现在的我，考上好的中学、大学，既没有变成小偷，也没有变成文中所谓的“新品种”。现在与父母谈起这些事，却变成了美好的回忆。（Ps. 当然，偷东西是不好的，我偷零钱买辣条的事情暴露后，可是父母被打得很惨的。）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在未成年人的成长中，家长的引导作用十分重要&lt;/strong&gt;。孩子被一个人扔在家里，不管他看动漫还是看课本，都很难形成正确的价值观。希望各位家长明白这点，负起自己的责任，而不要把过错推卸给动漫。&lt;/p&gt;

&lt;h2 id=&quot;3-总结&quot;&gt;3. 总结&lt;/h2&gt;

&lt;p&gt;原文的结论，我是非常赞同的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;真正该带着孩子认识世界的，本来就是父母。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这点和我之前反驳原文的态度是一致的。&lt;/p&gt;

&lt;p&gt;可是为什么我要花一篇文章的力气来批驳原文，那是因为&lt;strong&gt;原文借“动漫”这一个热点，以一个不当的点切题，举一系列不正确的例证，来说明一个正常人都应该知道的常识&lt;/strong&gt;，给读者带来“动漫是不好的”这种印象。&lt;/p&gt;

&lt;p&gt;首先，文章开始着笔描写动漫对95后的影响，以图夸大动漫危害，视动漫为洪水猛兽，营造一种95后被动漫毁了的氛围。但文章最后得出的却是家长要对孩子进行指引。我们注意到，95后们都已经成年了，应当不是没有分辨力的儿童了，这和文章。也就是说，文章的主体本身就不明确，只是为了批判二次元而将一些数据、新闻和结论拼凑起来。&lt;/p&gt;

&lt;p&gt;其次，以偏概全，以优酷、B站前三的动漫代表“孩子”的观影偏好，本身就是有偏的，文章还片面地描述一些动画，以图让读者以为流行地动漫都是三观不正的，还以广电总局的招牌，给日本动画打上暴力血腥的标签；又举一些有统计偏差的例子，引导读者形成“看动漫会造成不良后果“的概念。&lt;/p&gt;

&lt;p&gt;最后，文章又直接抛出真正该带着孩子认识世界的，本来就是父母的结论，然而这一个结论根本不必基于“动漫”而得出。因为，父母的指引本来就是理所当然的，这是父母作为监护人的责任，这个结论，套在任何一个名词上都是合适的。而文章却偏偏举动漫，由此推断，其意图无非是想借“动漫”的热点通过批驳动漫以提高阅读量罢了。&lt;/p&gt;

&lt;p&gt;2018.01.11 午后 于广州&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Jan 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/11/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/11/post01/</guid>
        
        <category>生活</category>
        
        <category>文艺</category>
        
        <category>ACG</category>
        
        
      </item>
    
      <item>
        <title>我们的时代</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;他们说，等今天过去了，就再没有未成年的90后了,他们说这将是00后的时代了，他们摆出自己的照片，开始怀缅意气风发的年纪。&lt;/p&gt;

&lt;h2 id=&quot;文&quot;&gt;文&lt;/h2&gt;

&lt;p&gt;那是我们的时代，可以肆无忌惮地畅谈未来，可以花一个下午的时间为秋风落叶感伤，可以不计后果地说“永远”。那是，我记得，我说过我永远爱着那个女孩，我说过我要永远保持热情，我说过我永远不要成为像父母一样的人……&lt;/p&gt;

&lt;p&gt;但少年口中的“永远”，永远是不可信的。他们连一生的长度都没有概念，他们怎么能知道“永远”有多远？&lt;/p&gt;

&lt;p&gt;那个本该永远被我爱着的女孩，早已不在我的心上；那份本应永远保持的热情，也早已屈服于生活的琐碎；至于我永远不想成为的父母啊，不知何时，雪花般的银色早已悄悄地爬上了他们的发梢。&lt;/p&gt;

&lt;p&gt;我已不再年少。那曾经的少年，开始为生计或欲望日夜疲于奔波，开始变得油腻、市侩、固执、自以为是。那曾经的少年，在他充满想象力的年纪里，大概是从未想到过自己将慢慢地成为自己所鄙夷的人。&lt;/p&gt;

&lt;p&gt;同年的人常说自己老了，但我从不这样说，因为我没有变老，我只是不再年少。倘若我说自己死了，那么比我更年长的人，未免也太可怜了些罢。我应当是永远不老的，即便不再年少，即便死去，也不要让世界看到我孱弱的模样。&lt;/p&gt;

&lt;p&gt;这是我们的时代，我们的时代已经过去了，但我们的时代才刚刚到来。&lt;/p&gt;

&lt;h2 id=&quot;后语&quot;&gt;后语&lt;/h2&gt;

&lt;p&gt;文章是归家时写在纸上，今日才post到blog上的。&lt;/p&gt;

&lt;p&gt;伏在家里的书桌前写字的感觉就像回到了年少的时候。&lt;/p&gt;

&lt;p&gt;以前我常在那张桌子上涂鸦、听电台、写小小的故事，后来我还经常涂鸦、听电台、写小小的故事，但碰到那张桌子的时间也渐渐少了。&lt;/p&gt;

&lt;p&gt;许久才回家一次，但因为母亲的打理，那张桌子一直没有积尘。&lt;/p&gt;

&lt;p&gt;2017.12.31 午后 于佛山&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jan 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/01/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/01/post01/</guid>
        
        <category>生活</category>
        
        <category>文艺</category>
        
        
      </item>
    
      <item>
        <title>爬虫入门笔记（四）</title>
        <description>&lt;h2 id=&quot;某魔法学院&quot;&gt;某魔法学院&lt;/h2&gt;

&lt;p&gt;今天校庆，和小伙伴出去吃了顿火锅有点高兴，所以写了一篇blog。（然而作业还没写完……）&lt;/p&gt;

&lt;p&gt;然而期中小长假结束了，有点不开心。&lt;/p&gt;

&lt;h2 id=&quot;如果坐上来自己动就好了&quot;&gt;如果坐上来自己动就好了&lt;/h2&gt;

&lt;p&gt;最近尝试爬知网上的一些数据(&lt;a href=&quot;http://dbpub.cnki.net/grid2008/dbpub/brief.aspx?id=scpd&quot;&gt;专利数据库&lt;/a&gt;)，他的界面是这个样子的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017111201/pic01.png&quot; alt=&quot;图 - 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;嗯，那我们首先要进行查询才能获得数据，我们输入以下条件进行搜索。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017111201/pic02.png&quot; alt=&quot;图 - 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017111201/pic03.png&quot; alt=&quot;图 - 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;得出一堆结果，点开发现是一些有规律的表格。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017111201/pic04.png&quot; alt=&quot;图 - 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果我们能让浏览器自动搜索，不就可以让他一直获取网页的数据了吗？&lt;/p&gt;

&lt;h2 id=&quot;selenium简介与配置&quot;&gt;Selenium简介与配置&lt;/h2&gt;

&lt;p&gt;是的， 因此我们今天试着用selenium这个框架。说起这个框架，其实这还是我一个接触的爬虫框架，当时也正是因为觉得这个框架很酷才继续研究爬虫的。下一篇文章将会介绍我第一次学习爬虫时曲折旅途，其中就还会提到selenium。&lt;/p&gt;

&lt;p&gt;Selenium用于编写自动控制浏览器的脚本，除了在爬虫上有应用，在并发模拟上也有应用。&lt;/p&gt;

&lt;p&gt;配置selenium需要以下几个步骤：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;安装selenium模块
配置driver&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;安装selenium模块&quot;&gt;安装selenium模块&lt;/h4&gt;

&lt;p&gt;用对应python的pip(或conda)安装：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install selenium
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;配置driverchrome&quot;&gt;配置driver(Chrome)&lt;/h4&gt;

&lt;p&gt;各种浏览器有各自的driver，这里推荐使用chrome的driver。&lt;/p&gt;

&lt;p&gt;首先要下载(&lt;a href=&quot;http://chromedriver.storage.googleapis.com/index.html&quot;&gt;地址&lt;/a&gt;)对应Chrome版本的chromedriver，版本映射表如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;v2.33&lt;/td&gt;
      &lt;td&gt;v2.32&lt;/td&gt;
      &lt;td&gt;v2.31&lt;/td&gt;
      &lt;td&gt;v2.30&lt;/td&gt;
      &lt;td&gt;v2.29&lt;/td&gt;
      &lt;td&gt;v2.28&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;v60-62&lt;/td&gt;
      &lt;td&gt;v59-61&lt;/td&gt;
      &lt;td&gt;v58-60&lt;/td&gt;
      &lt;td&gt;v58-60&lt;/td&gt;
      &lt;td&gt;v56-58&lt;/td&gt;
      &lt;td&gt;v55-57&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;v2.27&lt;/td&gt;
      &lt;td&gt;v2.26&lt;/td&gt;
      &lt;td&gt;v2.25&lt;/td&gt;
      &lt;td&gt;v2.24&lt;/td&gt;
      &lt;td&gt;v2.23&lt;/td&gt;
      &lt;td&gt;v2.22&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;v54-56&lt;/td&gt;
      &lt;td&gt;v53-55&lt;/td&gt;
      &lt;td&gt;v53-55&lt;/td&gt;
      &lt;td&gt;v52-54&lt;/td&gt;
      &lt;td&gt;v51-53&lt;/td&gt;
      &lt;td&gt;v49-52&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;v2.21&lt;/td&gt;
      &lt;td&gt;v2.20&lt;/td&gt;
      &lt;td&gt;v2.19&lt;/td&gt;
      &lt;td&gt;v2.18&lt;/td&gt;
      &lt;td&gt;v2.17&lt;/td&gt;
      &lt;td&gt;v2.13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;v46-50&lt;/td&gt;
      &lt;td&gt;v43-48&lt;/td&gt;
      &lt;td&gt;v43-47&lt;/td&gt;
      &lt;td&gt;v43-46&lt;/td&gt;
      &lt;td&gt;v42-43&lt;/td&gt;
      &lt;td&gt;v42-45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;v2.15&lt;/td&gt;
      &lt;td&gt;v2.14&lt;/td&gt;
      &lt;td&gt;v2.13&lt;/td&gt;
      &lt;td&gt;v2.12&lt;/td&gt;
      &lt;td&gt;v2.11&lt;/td&gt;
      &lt;td&gt;v2.10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;v40-43&lt;/td&gt;
      &lt;td&gt;v39-42&lt;/td&gt;
      &lt;td&gt;v38-41&lt;/td&gt;
      &lt;td&gt;v36-40&lt;/td&gt;
      &lt;td&gt;v36-40&lt;/td&gt;
      &lt;td&gt;v33-36&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;v2.9&lt;/td&gt;
      &lt;td&gt;v2.8&lt;/td&gt;
      &lt;td&gt;v2.7&lt;/td&gt;
      &lt;td&gt;v2.6&lt;/td&gt;
      &lt;td&gt;v2.5&lt;/td&gt;
      &lt;td&gt;v2.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;v31-34&lt;/td&gt;
      &lt;td&gt;v30-33&lt;/td&gt;
      &lt;td&gt;v30-33&lt;/td&gt;
      &lt;td&gt;v29-32&lt;/td&gt;
      &lt;td&gt;v29-32&lt;/td&gt;
      &lt;td&gt;v29-32&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;参考自&lt;a href=&quot;http://blog.csdn.net/huilan_same/article/details/51896672&quot;&gt;selenium之 chromedriver与chrome版本映射表（更新至v2.33）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这里一定要注意安装与你的Chrome版本对应的driver，不然会报错（这是个大坑）。&lt;/p&gt;

&lt;p&gt;把chromedriver放在环境变量的任一路径下即可。&lt;/p&gt;

&lt;p&gt;或者将chromedriver放在chrome的目录下，并将chrome的目录添加进去环境变量也是可以的。&lt;/p&gt;

&lt;p&gt;打开Python，测试一下：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;# 若配置成功，将会弹出Chrome浏览器界面&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.sysu.edu.cn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 浏览中大的网站&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                        &lt;span class=&quot;c&quot;&gt;# 关闭webdriver&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样，selenium的环境就配置好了。&lt;/p&gt;

&lt;h2 id=&quot;数据获取思路&quot;&gt;数据获取思路&lt;/h2&gt;

&lt;p&gt;我们思考一下我们搜索的流程。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;打开&lt;a href=&quot;http://dbpub.cnki.net/grid2008/dbpub/brief.aspx?id=scpd&quot;&gt;专利数据库&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;输入条件，搜索。&lt;/li&gt;
  &lt;li&gt;点击专利链接进入专利页面。&lt;/li&gt;
  &lt;li&gt;获取专利表格数据。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;接下来我们将会按以上流程依次获取数据。&lt;/p&gt;

&lt;h2 id=&quot;使用selenium操作浏览器&quot;&gt;使用Selenium操作浏览器&lt;/h2&gt;

&lt;p&gt;Selenium作为一个自动化的框架，用在爬虫技术上最好的优点就是十分弱智，一句话概括就是“写一个Script来控制浏览器”，操作基本上只有两个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建一个webdriver对象（其实就是浏览器）&lt;/li&gt;
  &lt;li&gt;通过webdriver的函数控制浏览器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在测试Chrome的时候我们就知道怎么让webdriver打开一个网页了，用webdriver.get(url)就行了。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;search_whe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'地址'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;search_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'东莞'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;search_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://dbpub.cnki.net/grid2008/dbpub/brief.aspx?id=scpd'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 创建一个webdriver，接下来的操作都基于此&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;               &lt;span class=&quot;c&quot;&gt;# 用get的方法打开网站&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;要对webdriver进行控制，每个操作只要执行两步：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;获取网页元素（Xpath）&lt;/li&gt;
  &lt;li&gt;操作网页元素&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;比如我们要在输入框输入，首先要获取要输入的文本框元素这一个对象，获取元素可以用webdriver.find_element_by_xpath(xpath)这个函数。&lt;/p&gt;

&lt;p&gt;这里提到Xpath，那到底什么是Xpath呢？&lt;/p&gt;

&lt;p&gt;这个就和我们上次提到BeautifulSoup很想，其实就是网页元素在网页的路径，我们通过Xpath可以准确定位一个元素在网页的位置（有点像我们OS的文件路径），当然其中还可以用一些匹配符号什么的，也能获取元素列表，至于Xpath的具体含义我们先不细说，以后有机会也可以写一篇文章（或者可以参考：&lt;a href=&quot;http://cuiqingcai.com/2621.html&quot;&gt;静觅 - Python爬虫利器三之Xpath语法与lxml库的用法&lt;/a&gt;），在这里介绍一个获取Xpath的快捷方法。&lt;/p&gt;

&lt;p&gt;在Chrome里，对要获取的元素右键-检查元素，弹出开发者工具，对元素的html标签右键，复制Xpath即可得到对应的Xpath，如图的文本框元素Xpath为&lt;code class=&quot;highlighter-rouge&quot;&gt;//*[@id=&quot;Text1&quot;]&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;获取了Xpath我们就可以获取元素，然后对元素进行操作，比如这里在文本框中输入关键词“东莞”。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;inbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;Text1&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 获取元素&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                                             &lt;span class=&quot;c&quot;&gt;# 清空文本框内容&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&quot;东莞&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                  &lt;span class=&quot;c&quot;&gt;# 在已有内容后添加文本&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们可以发现文本框内容变成了&lt;code class=&quot;highlighter-rouge&quot;&gt;东莞&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;其他操作类似，具体方法可以参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cuiqingcai.com/2599.html&quot;&gt;静觅 - Python爬虫利器五之Selenium的用法&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 此处接上，driver已经打开知网数据库网页。&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 获取元素&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# inbox：输入文本框 buton：搜索按钮 where：检索项 pages：每页条目 types：专利类别&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;Text1&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;buton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;Table6&quot;]/tbody/tr[1]/td[3]/table/tbody/tr/td/input'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;Select1&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;Table8&quot;]/tbody/tr/td/select[3]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;types&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;专利类别1&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 专利发明&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;专利类别2&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 外观设计&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;专利类别3&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# 实用新型&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;inbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                               &lt;span class=&quot;c&quot;&gt;# 清空文本框内容&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                 &lt;span class=&quot;c&quot;&gt;# 在已有内容后添加文本&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                               &lt;span class=&quot;c&quot;&gt;# 清除所有已选专利类别&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                  &lt;span class=&quot;c&quot;&gt;# 选择需要的专利类别&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select_by_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'50'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# 设置每页50条专利&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select_by_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_whe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 设置按地址搜索&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;buton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                               &lt;span class=&quot;c&quot;&gt;# 点击搜索按钮&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;获取专利数据&quot;&gt;获取专利数据&lt;/h2&gt;

&lt;p&gt;接下来就只需要定位专利条目，获取链接地址，然后提取相应链接里的信息。&lt;/p&gt;

&lt;p&gt;定位链接的话，我们仍然可以使用Selenium了啦，然后可以使用get_attribute这个方法来获取元素的属性。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'//*[@id=&quot;contentBox&quot;]/table/tbody/tr[2]/td[2]/a'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;有很多个链接的话，我们可以看到他的Xpath是有规律的，于是写一个循环就可以了。&lt;/p&gt;

&lt;p&gt;获取了链接，之后我们可以就用正则表达式来获取专利的具体信息了，另外这里用requests代替urblib和urllib2，但其实作用是差不多的。&lt;/p&gt;

&lt;h2 id=&quot;爬虫对象与多线程&quot;&gt;爬虫对象与多线程&lt;/h2&gt;

&lt;p&gt;在Spider_Lv3的代码里，将爬虫写成一个类，这样在我们调用时可以比较方便一些，每个小步骤也写成对应函数，因此在代码修改时可以更加简单。&lt;/p&gt;

&lt;p&gt;为了可以一边定位网页链接同时也一边获取网页数据，代码中使用了多线程，过程中了解到有人认为Python的多线程比较鸡肋，此次使用多线程到底有没有提高效率暂时也没有深究，多线程作为一个待学习的内容将来再研究。&lt;/p&gt;

&lt;p&gt;代码已发到&lt;a href=&quot;https://github.com/codeRimoe/Spider/tree/master/demo/Level_3&quot;&gt;Github - Spider&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;2017.11.12 晚 于广州&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/11/12/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/12/post01/</guid>
        
        <category>爬虫</category>
        
        <category>技术</category>
        
        <category>Python</category>
        
        <category>数据获取</category>
        
        
      </item>
    
      <item>
        <title>一些收获</title>
        <description>&lt;h2 id=&quot;从p值开始&quot;&gt;从p值开始&lt;/h2&gt;

&lt;p&gt;对于空间自相关，之前一直没看明白，只是大概知其所以，但也就这样不知其所以然。&lt;/p&gt;

&lt;p&gt;其中原因，也许是统计没学好。但这不能怪我，毕竟我们概率统计都没讲到假设检验。&lt;/p&gt;

&lt;p&gt;今天上课讲地理统计，提到空间自相关，老师解释了一通p值，但似乎没戳到p值本质，于是我在网上找了一下，很糙地理解了何为p值。&lt;/p&gt;

&lt;h2 id=&quot;假设-检验&quot;&gt;假设-检验&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.360doc.com/content/15/0704/22/22175932_482657194.shtml&quot;&gt;你真的懂p值吗? - 说人话的统计学&lt;/a&gt;里面把p值讲得十分通俗易懂，是一篇难得的好文章。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;原文对p值定义是：“在假定原假设为真时，得到与样本相同或者更极端的结果的概率。”
这和Wikipedia中引的定义差不多。
the probability for a given statistical model that, when the null hypothesis is true, the statistical summary (such as the sample mean difference between two compared groups) would be the same as or of greater magnitude than the actual observed results.
refer - Wasserstein, Ronald L.; Lazar, Nicole A. (7 March 2016). “The ASA’s Statement on p-Values: Context, Process, and Purpose”. The American Statistician. 70 (2): 129–133. doi:10.1080/00031305.2016.1154108. Retrieved 30 October 2016.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;文中，还举了一个很好的例子：&lt;/p&gt;

&lt;p&gt;statistical model：AB两人掷硬币，硬币由A提供。&lt;/p&gt;

&lt;p&gt;null hypothesis：B首先假设硬币是均质的。&lt;/p&gt;

&lt;p&gt;observed results：B检查硬币，掷五次，出现五次正面。&lt;/p&gt;

&lt;p&gt;在这个例子中p值：p=Pr(A)+Pr(B),
其中:
A=the same asthe actual observed results（出现五次正面）,
B=greater magnitude than the actual observed results（更小概率的情况）.&lt;/p&gt;

&lt;p&gt;显然p值很小的时候我们的零假设就可以被拒绝了。&lt;/p&gt;

&lt;h2 id=&quot;空间自相关&quot;&gt;空间自相关&lt;/h2&gt;

&lt;p&gt;空间自相关的零假设是“空间分布是均匀的”，然后在这个条件下算出当前分布出现的概率和跟不均匀的概率的和，这个结果就是p值。&lt;/p&gt;

&lt;p&gt;至于p值小于多少（显著性水平α），就是人为指定的了。&lt;/p&gt;

&lt;p&gt;因此空间自相关的p值说明的是“在显著性水平α下没有发现足够的证据反对原假设”。&lt;/p&gt;

&lt;p&gt;知乎上还提到，p值其实是拒绝真的概率，也就是说，如果我们拒绝假设，有p的概率是该假设为真。从而又引申出第一类错误、第二类错误的概念。&lt;/p&gt;

&lt;h2 id=&quot;关于统计学&quot;&gt;关于统计学&lt;/h2&gt;

&lt;p&gt;统计是一个很有趣而且实用的东西，在地理学的研究中其实十分重要，或者说，有时候我们对一些概念的不理解其实是因为统计没学好。&lt;/p&gt;

&lt;p&gt;2017.10.23 晚 于广州&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/10/23/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/23/post01/</guid>
        
        <category>统计</category>
        
        <category>空间分析</category>
        
        
      </item>
    
      <item>
        <title>我想写一篇文章</title>
        <description>&lt;h2 id=&quot;关于苦闷&quot;&gt;关于苦闷&lt;/h2&gt;

&lt;p&gt;我想写一篇文章来表达我内心的苦闷，但是我连我内心的情感都无法好好地说出来，那就像是一个未懂言语的孩子咿咿呀呀地哭着叫着，让别人看着好笑。&lt;/p&gt;

&lt;p&gt;说一个故事容易，写成一篇文章却颇难。&lt;/p&gt;

&lt;p&gt;六年前的我，还是一个喜欢文艺却不愿读书的青年，那时正是爱好谈情的年纪–总歆羡着怎样风花之前，憧憬着如何雪月之下。以为这世间惟有妹子与爱不可辜负。现今看来似乎也并不如此，只不过那时用来把自己灌醉的梅子酒瓶，还散发出淡淡的青涩的馨香。&lt;/p&gt;

&lt;p&gt;那时的笑靥与心跳，我大概是早已忘记了。我只记得那个映着彩霞的傍晚，我逃离了教室，逃离了宿舍，逃离了饭堂，逃去了一个见不着人只见得着天空的地方，在那里即便我不用双手捂着脸也不会感到羞耻。我对着抹着浓浓胭脂的天空说了好多情话，即便他倦了也不肯停下来。后来，他亮起了点点星灯一直为我倾听。我也一直对着它倾诉，直到今天仍未回来。&lt;/p&gt;

&lt;p&gt;再往前的三年，也是有那么一个晚上，月光躲在淡淡的云里，只羞涩地透出微微光晕。而我也同样地掩着自己的心扉。那时也还能面不改色地背诵“身无彩凤双飞翼，心有灵犀一点通”。尔今细思，我与那女子或是那女子约莫凿实是心有灵犀的，也许就少了那么一点。再后来，就再无能够“一点通”的事物了，若是非要说有，那便是某本作业用的练习册了。&lt;/p&gt;

&lt;p&gt;人们常说，“酒逢知己千杯少”，但于我而言，千杯怕是喝不下的，但知己倒是逢着了几位。&lt;/p&gt;

&lt;p&gt;年青人好议论，如今的我也如此，只是到现在，再没有能找到几个能称知己的–曾经的知己，不是忙碌了，便是四散了。现在要是有话要说，也只能倒两壶小酒，自己说自己听罢了。&lt;/p&gt;

&lt;p&gt;今年入五月后不久，某君误会我意，但这一记歪打却正着我本心，然其后无果，只得出个“话不投机半句多”的结论。自那起，我便开始谋划着，总有一天要抱一只小猫过活。自诩为“生活家”的我，计划着要独享世间一切美好的事物，诸如诗，画，故事，音乐，远方，当然还有静谧的午后和慵懒的阳光–这或许是可以和小猫同享的。&lt;/p&gt;

&lt;p&gt;谁也愿意虚度时光，谁又愿意浪费时光？我以为世上的好与坏，都是值得去经验的，我们谈美，谈快乐，同我们谈丑，谈悲伤同义。须知闪光的钻石与乌黑的煤泥乃是同素的。&lt;/p&gt;

&lt;p&gt;佛曰七苦：生，老，病，死，爱别离，怨憎会，求不得。期间种种悲苦，其实都是值得庆祝的事情。&lt;/p&gt;

&lt;p&gt;生是幸运的，但以生为苦，皆因一切苦的根源都是生。每日我睁开眼由梦中醒来，感到的是对新一日的期待，同时也伴随着对现实对生的疲倦。反过来，死，作为生的对立面是可怕的，但又因向死而有生，若无死则无所谓生。&lt;/p&gt;

&lt;p&gt;至于老、病，会带来悲苦，其中又渗着年轻的活力与生命的希望。我们贪恋青春的容颜与美好的肉体，但又渴望长进与经验，这便是老、病的矛盾。&lt;/p&gt;

&lt;p&gt;如果说“生，老，病，死”是人对时间的流逝和生命的脆弱而感到的无助之苦，那么“爱别离，怨憎会，求不得”便是对命运无常的无奈之苦。人生中最壮美的故事，不过此三。&lt;/p&gt;

&lt;p&gt;所爱者终究是要别离的，令人憎恶的事物总是会遇上的，至于人生之不如意者，十常八九。如此看来，我等人生，岂不图有苦闷？是的吧，人生之苦闷久矣，若不，佛家何以称死后登极乐，基督何以称得道入天堂？&lt;/p&gt;

&lt;p&gt;我要写一篇文章来表达我内心的苦闷，但一提起笔来，写的都是些值得庆祝的事情。&lt;/p&gt;

&lt;p&gt;2017.10.05 凌晨 于佛山&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/10/05/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/05/post01/</guid>
        
        <category>生活</category>
        
        <category>文艺</category>
        
        
      </item>
    
      <item>
        <title>爬虫入门笔记（二）</title>
        <description>&lt;h2 id=&quot;缘起&quot;&gt;缘起&lt;/h2&gt;

&lt;p&gt;昨晚回宿舍的时候，看到一对情侣在路边撒狗粮，就像这样：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic01.jpeg&quot; alt=&quot;图 - 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后我就想可不可以上微博看看有没有相亲的，嗯，好像还真有：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic02.png&quot; alt=&quot;图 - 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那不如用爬虫爬一份相亲列表出来吧，嘿嘿嘿。&lt;/p&gt;

&lt;p&gt;我们尝试用&lt;a href=&quot;http://blog.rimoe.xyz/2017/08/24/post01/&quot;&gt;上一篇文章&lt;/a&gt;的方法获取&lt;a href=&quot;http://weibo.com/u/3803639941?refer_flag=1001030001_&amp;amp;nick=%E4%BA%8C%E6%AC%A1%E5%85%83%E4%BA%A4%E5%BE%80%E5%B9%B3%E5%8F%B0&amp;amp;is_hot=1&amp;amp;noscale_head=1#_0&quot;&gt;二次元交往平台&lt;/a&gt;的主页。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://weibo.com/u/3803639941?refer_flag=1001030001_&amp;amp;&quot;&lt;/span&gt;
                       &lt;span class=&quot;s&quot;&gt;&quot;nick=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BA&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%8&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E6&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AC&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%85%83%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BA&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BE&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%80%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&quot;&lt;/span&gt;
                       &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B9&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B3&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%8&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B0&amp;amp;is_hot=1&amp;amp;noscale_head=1#_0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gbk'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 以gbk方式解码&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然而发现……没有妹纸呀……&lt;/p&gt;

&lt;p&gt;仔细观察，发现打印出来的开头是这样的：&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=gb2312&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Sina Visitor System&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;访客系统……也就是说跳转到登录的网页了，需要登录才可以访问。&lt;/p&gt;

&lt;p&gt;对于这种情况，我们可以有两个办法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;让爬虫自己登录&lt;/li&gt;
  &lt;li&gt;手工登录，然后爬虫使用cookie&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这篇文章里，我们手工登录获取cookie，然后使用cookie访问网页，至于第一种方法，后续的文章再做讨论。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;运行环境&quot;&gt;运行环境&lt;/h2&gt;

&lt;p&gt;之前也说过了，这里语句运行环境都为Mac OS／Python2.7.13。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;获取cookie&quot;&gt;获取cookie&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;维基百科:Cookie，中文名称为“小型文本文件”或“小甜饼”，指某些网站为了辨别用户身份而储存在用户本地终端上的数据（通常经过加密）。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;平时我们PC上用微博时，在一次登录后，我们后续访问就可以不用登录了，其实就是本地存储了登录状态，请求网页时发送本地的cookie即可表明账户登录状态。&lt;/p&gt;

&lt;p&gt;利用Chrome的开发者工具可以很方便地获取cookie。&lt;/p&gt;

&lt;p&gt;如图，在Network中查看提交的Header，我们可以看到长长的一串字符，在访问网页时，我们只要提交这个cookie，就可以使用登录状态访问网页啦。&lt;/p&gt;

&lt;p&gt;这个cookie在登录后持续有效直到退出账户或该次登录失效。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;配置请求头&quot;&gt;配置请求头&lt;/h2&gt;

&lt;p&gt;之前写&lt;a href=&quot;http://blog.rimoe.xyz/2017/07/29/post01/&quot;&gt;API调研究&lt;/a&gt;的时候也提到了HTML请求方式和Header。&lt;/p&gt;

&lt;p&gt;具体可以查阅&lt;a href=&quot;http://www.runoob.com/http/http-tutorial.html&quot;&gt;HTTP教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们在这里尝试使用urllib2提交请求头。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://weibo.com/u/3803639941?refer_flag=1001030001_&amp;amp;&quot;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;&quot;nick=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BA&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%8&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E6&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AC&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%85%83%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BA&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BE&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%80%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&quot;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B9&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B3&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E5&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%8&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B0&amp;amp;is_hot=1&amp;amp;noscale_head=1#_0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SINAGLOBAL=balabala'&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 输入cookie&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cookie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 将URL、Header打包请求，当然这里还可以有别的参数&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# class urllib2.Request(url[, data][, headers][, origin_req_host]\&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [, unverifiable])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 提交请求并获取响应&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;返回：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic03.png&quot; alt=&quot;图 - 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;好啦，接下来就是正则表达式的事情了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;使用beautifulsoup提取信息&quot;&gt;使用BeautifulSoup提取信息&lt;/h2&gt;

&lt;p&gt;可是，正则表达式用起来十分不方便，还容易出错，一不小心格式就调不好，还有可能连错在哪都搞不清楚。&lt;/p&gt;

&lt;p&gt;我们知道在HTML DOM中HTML的所有内容被都视为一种节点，其实我们只要知道节点的路径，就可以快速获取该节点提取相应信息。BeautifulSoup就可以基于这个原理用于快速获取html里的信息。&lt;/p&gt;

&lt;p&gt;这里就可以尝试使用BeautifulSoup来代替正则表达式，体会一下鸟枪换炮的感觉。&lt;/p&gt;

&lt;p&gt;据说bs4对Python3并不友好，但我们用的是python2就不管那么多了。&lt;/p&gt;

&lt;p&gt;当然使用前我们要先安装一下bs4这个库,另外我们还需要lxml这个库的支持（用于解析html，类似的还有html5lib以及python自带的html.parser）:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install bs4
pip install lxml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;观察源码，我们可以发现，微博的网页其实是使用一个js函数FM.view(json)来展示的，html存在一个json格式中：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;FM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;ns&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;domid&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;css&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;html&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;balabala&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic04.png&quot; alt=&quot;图 - 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再仔细观察，可以发现，主页微博的html是在domid为Pl_Official_MyProfileFeed__22的json中的，我们先用正则表达式把这部分内容提取出来。使用json模块解析其中的html属性，就得到用户主页微博的html文本。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#承接上一节response为返回内容&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&quot;domid&quot;:&quot;Pl_Official_MyProfileFeed__22&quot;,(.*?)\)&amp;lt;/script&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;webres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#用正则表达式提取包含内容部分&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;webres_json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webres&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#解析json字符串，前面要补充`{`字符&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;webres_html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webres_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;打印出来是这样的：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic05.png&quot; alt=&quot;图 - 5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下来我们用BeautifulSoup对html文本进行分析，首先看看造出来soup是怎样的呢？&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#使用BeautifulSoup对webres_html进行分析&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lxml&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webres_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'lxml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 构建Soup&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic06.png&quot; alt=&quot;图 - 6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打印出来的东西十分整齐，真是一个beautiful的soup，看着就很舒服。使用contents可以逐级分析html下的标签元素。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过源码我们大概知道，在每条单独微博都在一个class为”WB_dertail”的div里，使用find_all的方法，得到所有符合条件的标签，以数组形式返回，然后我们，将微博里的含信息标签全部提取出来。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 微博每张图片有id，缩略图URL、URL分别为以下格式：&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# http://wx4.sinaimg.cn/mw690/(pic_id).jpg   # URL&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# http://wx4.sinaimg.cn/square/(pic_id).jpg  # 缩略图URL&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;infos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WB_detail&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern_pic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'pic_id=(.*)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Stxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;txts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WB_text W_f14&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'li'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txtc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Stxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txtc&lt;/span&gt;              &lt;span class=&quot;c&quot;&gt;# 对于链接文本，提取其内容&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Stxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;               &lt;span class=&quot;c&quot;&gt;# 否则原样输出&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pic&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;                &lt;span class=&quot;c&quot;&gt;# 得到图片URL&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;picid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern_pic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'action-data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://wx1.sinaimg.cn/mw690/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;picid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.jpg'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Stxt&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;打印出来的效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic07.png&quot; alt=&quot;图 - 7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;关于BeautifulSoup的用法，可以参考&lt;a href=&quot;http://cuiqingcai.com/1319.html&quot;&gt;静觅 - Python爬虫利器二之Beautiful Soup的用法&lt;/a&gt;，此外个人觉得XPath更好用，具体可以参考&lt;a href=&quot;http://cuiqingcai.com/2621.html&quot;&gt;Python爬虫利器三之Xpath语法与lxml库的用法&lt;/a&gt;。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;写文件&quot;&gt;写文件&lt;/h2&gt;

&lt;p&gt;写文件当然容易，但要保存图片的话，就需要用到imghdr模块。&lt;/p&gt;

&lt;p&gt;imghdir的what模块可以返回图片的文件格式。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;imghdr&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pic_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://rimoe.xyz/assets/img/9030.jpg'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;save_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/Users/_nA/Desktop/'&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# 存储路径&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;photo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pic_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pic_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# 判断图片格式&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pic_type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;                   &lt;span class=&quot;c&quot;&gt;# 若无法识别格式返回None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pic_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'pic.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pic_type&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;photo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;按页数依次爬取&quot;&gt;按页数依次爬取&lt;/h2&gt;

&lt;p&gt;这样下来我们只能抓取一部分，妹子根本不够看，那我们就多抓几页：&lt;/p&gt;

&lt;p&gt;我们可以看到微博主页的URL可以设置URL参数，这里简单地修改URL的page参数即可。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://weibo.com/u/3803639941?is_search=0&amp;amp;visible=0&amp;amp;is_all=1&amp;amp;is_tag=0&amp;amp;&quot;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;&quot;profile_ftype=1&amp;amp;page=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后程序可以写成函数，写个循环就开始跑了。&lt;/p&gt;

&lt;p&gt;跑出来结果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic08.png&quot; alt=&quot;图 - 8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic09.png&quot; alt=&quot;图 - 9&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;结尾&quot;&gt;结尾&lt;/h2&gt;

&lt;p&gt;嗯，可是这东西爬下来关我什么事呢？&lt;/p&gt;

&lt;p&gt;写这篇文章的人真是有够无聊了，还不如去看二次元的妹子（误）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017090401/pic10.jpg&quot; alt=&quot;图 - 10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;代码已发到&lt;a href=&quot;https://github.com/codeRimoe/Spider/tree/master/demo/Level_2&quot;&gt;Github - Spider&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;2017.09 于广州&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/09/04/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/09/04/post01/</guid>
        
        <category>爬虫</category>
        
        <category>技术</category>
        
        <category>Python</category>
        
        <category>数据获取</category>
        
        
      </item>
    
      <item>
        <title>爬虫入门笔记（一）</title>
        <description>&lt;h2 id=&quot;缘起&quot;&gt;缘起&lt;/h2&gt;

&lt;p&gt;三月份的时候，那时的我还很有志气地打算学习数据分析的，然而后来发现自己似乎把技能点点到前端上了。&lt;/p&gt;

&lt;p&gt;数据分析的话要有数据呀，嗯，从网上获取数据吧。手动扒太累了，就写个小程序咯。&lt;/p&gt;

&lt;p&gt;说起来接触Python还是因为认识的同学说想学爬虫，然后问我写爬虫用什么语言好。我百度了一下，似乎写爬虫都用Python，于是我就跟他讲，你学Python吧。后来又由于各种原因我也进了Python的坑。&lt;/p&gt;

&lt;p&gt;那到底什么是爬虫呢？说白了就是自动浏览网页获取网页的自动化程序，其实我们常用搜索引擎就有爬虫技术，比如Google爬虫。至于为什么用Python写，刚刚就说了，大家都用这个写，学的话也容易上手。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic01.jpg&quot; alt=&quot;图 - 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们平时访问网页，表面上就是输入网址-浏览网页-获取信息三步，因此最简单的爬虫就是不断重复这三步。&lt;/p&gt;

&lt;p&gt;事实上，写爬虫这东西，其实并没有太多技术性。但想造出健壮的爬虫，其实并不容易的。爬虫与反爬虫的斗争，大家可以上知乎了解一下：&lt;a href=&quot;https://www.zhihu.com/question/58342241&quot;&gt;知乎 - 有哪些有趣的反爬虫手段？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;至于爬虫能干啥，请看：&lt;a href=&quot;https://www.zhihu.com/question/27621722&quot;&gt;利用爬虫技术能做到哪些很酷很有趣很有用的事情？&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;所需模块&quot;&gt;所需模块&lt;/h2&gt;

&lt;p&gt;写一个最简单的爬虫，其实只需要这两个模块：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;urllib和urllib2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一看这个模块名就知道是URL相关的library。具体用法可以参看：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/urllib.html&quot;&gt;urllib官方文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/urllib2.html&quot;&gt;urllib2官方文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/947.html&quot;&gt;静觅 - Python爬虫入门三之Urllib库的基本使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/954.html&quot;&gt;静觅 - Python爬虫入门四之Urllib库的高级用法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下语句运行环境为Mac OS／Python2.7.13。&lt;/p&gt;

&lt;p&gt;一开始就说了我们只需要模拟三个步骤：输入网址-浏览网页-获取信息。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;输入网址&quot;&gt;输入网址&lt;/h2&gt;

&lt;p&gt;输入网址是为了获取网页，当然前提是要联网，我们可以先在交互式解释器中看看。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://rimoe.xyz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 打开网页http://rimoe.xyz&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                          &lt;span class=&quot;c&quot;&gt;# 解析re，输出html格式&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;输出：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 &lt;span class=&quot;nt&quot;&gt;&amp;lt;addinfourl&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;4436195304&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;whose&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fp =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;socket._fileobject&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;0x10816f8d0&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&amp;gt;
2 '&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; 
  &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n …… &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;\n'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic02.jpg&quot; alt=&quot;图 - 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;事实上，获取数据就是这么两句话。在某种意义上来说，网页经已爬下来了，爬虫已经写完啦。&lt;/p&gt;

&lt;p&gt;先压抑内心的小兴奋，爬下来这么一堆东西有啥用呢？&lt;/p&gt;

&lt;p&gt;当然，这样一堆字符看起来没啥用，但我们可以想办法从中间提取想要的元素。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;浏览网页&quot;&gt;浏览网页&lt;/h2&gt;

&lt;p&gt;我们日常浏览的网页一般都是浏览器解析过的标签文件，具体过程可以参考：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/xiangriikui/article/details/52207153&quot;&gt;前端文摘：深入解析浏览器的幕后工作原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/lhb25/p/how-browsers-work.html&quot;&gt;在浏览器中输入网址到网页展现全部过程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然对于爬虫而言，我们希望程序输出的只包含我们需要的信息，因此我们需要对刚刚抓取的网页进行分析，也就是写程序来代替浏览器解释我们获取的文件（这里是html）。&lt;/p&gt;

&lt;p&gt;这里就可以用到「正则表达式」这个东西了。&lt;/p&gt;

&lt;p&gt;正则表达式，故名思义，就是规则的表达式，或者说是一个样例，通过这个样例我们可以从文本中规范准确地提取符合该样例的部分文本。&lt;/p&gt;

&lt;p&gt;我们可以用正则表达式来提取能够匹配表达式的文本，正则表达式的匹配规则如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic03.png&quot; alt=&quot;图 - 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;部分注解抄录如下：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;（1）数量词的贪婪模式与非贪婪模式&lt;/p&gt;

  &lt;p&gt;正则表达式通常用于在文本中查找匹配的字符串。Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。例如：正则表达式”ab&lt;em&gt;”如果用于查找”abbbc”，将找到”abbb”。而如果使用非贪婪的数量词”ab&lt;/em&gt;?”，将找到”a”。&lt;/p&gt;

  &lt;p&gt;注：我们一般使用非贪婪模式来提取。&lt;/p&gt;

  &lt;p&gt;（2）反斜杠问题&lt;/p&gt;

  &lt;p&gt;与大多数编程语言相同，正则表达式里使用”\”作为转义字符，这就可能造成反斜杠困扰。假如你需要匹配文本中的字符”\”，那么使用编程语言表示的正则表达式里将需要4个反斜杠”\\”：前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。&lt;/p&gt;

  &lt;p&gt;Python里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用r”\”表示。同样，匹配一个数字的”\d”可以写成r”\d”。有了原生字符串，妈妈也不用担心是不是漏写了反斜杠，写出来的表达式也更直观勒。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;图片引用及参考来自：&lt;a href=&quot;http://cuiqingcai.com/977.html&quot;&gt;静觅 - Python爬虫入门七之正则表达式&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python的re模块可以使用正则表达式匹配字符串：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### 举例1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;txt1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rimoe,rimoe.xyz'&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;#从txt1中搜索关键字'rimoe'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rimoe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;#用正则表达式生成pattern对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;#查找所有符合表达式的子串&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### 举例2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1.rimoe&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.Yue&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.Luo&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;# 从txt2中提取列表内容&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d+\.(.*?)\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 一般用r串作为参数&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 这里\d匹配数字（0～9），+表示匹配连续的数字，\.匹配字符'.'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (.*?)匹配连续任意字符任意次，括号表示要提取的部分分组&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# \n匹配回车，(.*?)\n表示任意字符匹配直到遇到回车停止匹配&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rimoe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rimoe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rimoe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Yue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Luo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比如对于我们刚刚爬下来的网页，我们想要提取网页的这一部分：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic04.jpg&quot; alt=&quot;图 - 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们可以右击相应元素，点“检查”（审查元素）查看相对应的标签：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic05.jpg&quot; alt=&quot;图 - 5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然这里推荐Chrome，主要是因为好用加功能完善，在学习爬虫的道路上这个审查元素的功能和这个开发者选项框将会是你学习爬虫的好基友，弹出的框如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic06.jpg&quot; alt=&quot;图 - 6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们可以看到其实这一部分是一个列表标签，在我们刚刚抓取的网页里面也能找到：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic07.jpg&quot; alt=&quot;图 - 7&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/codeRimoe/h5_game_kanna&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;h5 Game - 坎娜与托尔&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://blog.rimoe.xyz/2017/06/09/post01/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;[NOTE BLOG]&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://rimoe.xyz/kanna&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;[TRY NOW]&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/codeRimoe/Wolf_and_Sheep&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;OOP Homework - Wolf and Sheep&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\\&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;[NOTE BLOG]&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们用正则表达式来表示,分两次提取：&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 刚刚提取的网页返回res&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;txt1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;li&amp;gt;(.*?)&amp;lt;/li&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 提取列表标签&amp;lt;li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# re.S为DOCALL模式，该模式下字符'.'可以匹配回车'\n'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt;                               &lt;span class=&quot;c&quot;&gt;# 打印出来看看是什么样子的吧～&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;a.*?href=(.*?)&amp;gt;(.*?)&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 逐项提取链接标签&amp;lt;a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Project：'&lt;/span&gt;                    &lt;span class=&quot;c&quot;&gt;# 格式化打印&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出：&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;          &amp;lt;a href=&quot;https://github.com/codeRimoe/h5_game_kanna&quot;&amp;gt;h5 Game - &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe5\x9d\x8e\xe5\xa8\x9c\xe4\xb8\x8e\xe6\x89\x98\xe5\xb0\x94&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;/a&amp;gt;  &amp;lt;a href=&quot;http://blog.rimoe.xyz/2017/06/09/post01/&quot;&amp;gt;[NOTE BLOG]&amp;lt;/a&amp;gt;  &amp;lt;a href=&quot;http://rimoe.xyz/kanna&quot;&amp;gt;[TRY NOW]&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;        '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;          &amp;lt;a href=&quot;https://github.com/codeRimoe/Wolf_and_Sheep&quot;&amp;gt;OOP Homework - Wolf and Sheep&amp;lt;/a&amp;gt;  &amp;lt;a href=&quot;http://blog.rimoe.xyz/2017/07/27/post01/&quot;&amp;gt;[NOTE BLOG]&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;        '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;坎娜与托尔&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/codeRimoe/h5_game_kanna&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NOTE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BLOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://blog.rimoe.xyz/2017/06/09/post01/&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://rimoe.xyz/kanna&quot;&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OOP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Homework&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Wolf&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sheep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/codeRimoe/Wolf_and_Sheep&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NOTE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BLOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://blog.rimoe.xyz/2017/07/27/post01/&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic08.jpg&quot; alt=&quot;图 - 8&quot; /&gt;
&lt;img src=&quot;/img/in-post/2017082401/pic09.jpg&quot; alt=&quot;图 - 9&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;获取信息&quot;&gt;获取信息&lt;/h2&gt;

&lt;p&gt;一般来说数据获取后，要保存到本地，对于列表一般保存为csv格式，这里我们就保存为普通的文本文件。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#将打印部分修改成保存文档&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Project:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/2017082401/pic10.jpg&quot; alt=&quot;图 - 10&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Spider Lv1&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://rimoe.xyz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# 打开网页http://rimoe.xyz&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;txt1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;li&amp;gt;(.*?)&amp;lt;/li&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 提取列表标签&amp;lt;li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;a.*?href=(.*?)&amp;gt;(.*?)&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# 逐项提取链接标签&amp;lt;a&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Project:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                  &lt;span class=&quot;c&quot;&gt;# 格式化输出&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;代码已发到&lt;a href=&quot;https://github.com/codeRimoe/Spider/tree/master/demo/Level_1&quot;&gt;Github - Spider&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;爬虫的原理简单粗暴，除了这个简单的爬虫之外，其实还有一些简单易用的现成框架，有硬件条件的话，爬虫的威力其实更大。&lt;/p&gt;

&lt;p&gt;当然有条件的话，最好的爬虫其实是人肉爬虫（滑稽）。&lt;/p&gt;

&lt;p&gt;接下来如果有时间，会继续写完这个爬虫入门笔记系列。&lt;/p&gt;

&lt;p&gt;2017.08.24 午后 于广州&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/24/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/24/post01/</guid>
        
        <category>爬虫</category>
        
        <category>技术</category>
        
        <category>Python</category>
        
        <category>数据获取</category>
        
        
      </item>
    
      <item>
        <title>对学习及未来的一点思考</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;切莫浮沙筑高台，不为繁华易素心。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;弁言&quot;&gt;弁言&lt;/h2&gt;

&lt;p&gt;近日作息挺规律的，在学校里也算是有事可做。暑假一不小心就被弄丢了，似乎做了些什么，又似乎什么也没做。&lt;/p&gt;

&lt;p&gt;有位老师上课说，大学生活也就是 —— 大一搞社团，大二搞妹子，大三才想起要学习，等到大四就准备去实习。&lt;/p&gt;

&lt;p&gt;我一直以为在学习上我是没有停歇过的，上课认真听 —— 然而也还是将许多节课睡过去了，作业认真写 —— 然而还是有许多作业是糊弄过去的。要说学到最多东西的，大概就是看知乎吧。这天下决心学这些，再过几天就把心思放在别的地方。似乎什么都懂一点，但最后却是什么都没得到。&lt;/p&gt;

&lt;p&gt;我以前可有好好真正地「学习」过？&lt;/p&gt;

&lt;p&gt;有的。小学时候为的一道数学题可以沉思好久，初中时候为了学英文每天努力地记单词，高中时候忘我地写作、刻章，为了整理好一页笔记放弃一个晚修，近来研究爬虫和网页时候遇到问题来回踱步。直到今天认真思考怎么画画才回想起那些时候的感觉。所谓学习，原来是专心思考一件事，可以不被一切的一切所吸引。&lt;/p&gt;

&lt;p&gt;一直以来最惹我羡慕两种人，一种是认真的人，一种是固执的人。&lt;/p&gt;

&lt;p&gt;现在看来，和我交心的几个朋友，要不就是认真的人，要不就是固执的人，要不就是既认真又固执的人。&lt;/p&gt;

&lt;p&gt;近来在知乎上看到一句话，我很喜欢，概括起来就是，「认真」、「固执」。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;切莫浮沙筑高台&quot;&gt;切莫浮沙筑高台&lt;/h2&gt;

&lt;p&gt;这句话出处未考，但似乎很多学工科的都很喜欢这句话。&lt;/p&gt;

&lt;p&gt;基础的不认真学好，是造不出好的东西的。我小时候也试过，物理还没学好，就想去看量子力学，然后结果可想而知。&lt;/p&gt;

&lt;p&gt;记得教我概率统计的王向阳老师上课说，数学系的学生对定义是很清晰的，所以数学系的学生做起题来比理工科的学生好。一直以来，作为理科生，我对问题的思考，都是建立在最基础的概念和定义上的，一句话读不懂，就会一个个词语去想，这个是什么。在学术上，定义是不应该也不可能会被糊弄过去的。&lt;/p&gt;

&lt;p&gt;其实最终说明的道理还是一样，浮沙筑不起高台，这也是我为什么对一些简单的学习和作业也认真记录的原因。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;不为繁华易素心&quot;&gt;不为繁华易素心&lt;/h2&gt;

&lt;p&gt;出自元代冯子振的《西湖梅》：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;苏老堤边玉一林，六桥风月是知音。 任他桃李争欢赏，不为繁华易素心。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;本意说的是淡泊名利，志向高洁。&lt;/p&gt;

&lt;p&gt;在瞬息万变的今天，新的事物太多太多，每天都是一个不一样的世界。&lt;/p&gt;

&lt;p&gt;听说人工智能很热，大家都觉得很酷，就有人开始担心人工智能统治世界，或有人都觉得自己也要学学神经网络才行。&lt;/p&gt;

&lt;p&gt;可是神经网络这种上个世纪发明的东西，是哪些人让他变得很酷呢？我想应该是那些不担心自己做的东西会过时，不担心自己研究的东西不是热点的人吧。&lt;/p&gt;

&lt;p&gt;有时候，学习古老的的技术会觉得似乎没什么用，好害怕再过不久旧的技术就会被取代。一直以来都觉得自己学的东西不够前沿，不够酷，感觉自己这也不会，那也不会。但现在想想，那又怎样呢？没有必要让自己为了时代潮流而放弃目前的方向。这也想学，那也想学是不对的。毕竟看见路口就拐弯的话，往往都是回到原点的。&lt;/p&gt;

&lt;p&gt;我所羡慕的固执的人，他们能无畏地说出非某事某物不可的言论，他们能不想退路地一条路走到黑，他们能不顾外界的影响随自己的心而去。我想这才是学习乃至人生的真正方法。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;未来&quot;&gt;未来&lt;/h2&gt;

&lt;p&gt;大学算是过去一半了，在这个时候不免会担心未来。&lt;/p&gt;

&lt;p&gt;迷茫是一件好事情，那是有思考而有有选择的人的特权，但我想，能好好地做自己想做的事，过让自己感到快乐的日子，其实是很不错的。蓦直向前，不忘初心，那不是很好吗？&lt;/p&gt;

&lt;p&gt;2017.08.19 晚 于广州&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/19/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/19/post01/</guid>
        
        <category>生活</category>
        
        <category>文艺</category>
        
        
      </item>
    
      <item>
        <title>玥</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;皓洁为月，佳文成玉。凤鸟神珠，寄吾德馨。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;二十年有二月记&quot;&gt;二十年有二月记&lt;/h2&gt;

&lt;p&gt;是年丁酉，余及冠，自取表字为玥，记于此。&lt;/p&gt;

&lt;p&gt;自民国新学盛起，气象变化，又及文革之乱，礼乐俱废。今举国崇尚数理，新学鼎盛，余逆潮流而行，复辟旧习，以缅古人，并规行自勉。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;大学&quot;&gt;大学&lt;/h2&gt;

&lt;p&gt;前不久经过中大北门的牌坊，才发现背面铭着的是“格致诚正 修齐治平”，此中深意，引我沉思。&lt;/p&gt;

&lt;p&gt;中大入学读《大学》，很多人会觉得不明所以，此大学与彼《大学》到底是同一个东西吗？&lt;/p&gt;

&lt;p&gt;所谓大学，和《大学》中的明德、亲民、止于至善是关联的。所谓大学，和《大学》中的格物、致知、诚意、正心、修身、齐家、治国、平天下是一致的。&lt;/p&gt;

&lt;p&gt;君子之志，不在名利。大丈夫理当以治国平天下为己任，而真正的大学，则是提供一条实现理想的道路。潜心学术研究，求学问道于先生学人，就是格物致知。在大学的生活、交往、锻炼，我们的通识课、我们听的讲座、我们谈论的一切，都是诚其意、正其心、修其身的过程。创业、工作则是齐家，齐家乃能安邦平天下。&lt;/p&gt;

&lt;p&gt;朱子借大学所讲的理，至今依旧受用。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;回忆往事兼论教育&quot;&gt;回忆往事兼论教育&lt;/h2&gt;

&lt;p&gt;再前不久经过磨碟沙，见到很久前的酒楼仍在，如今已落败了许多，令我想起一段往事。&lt;/p&gt;

&lt;p&gt;本欲在此记下，兼论今日对教育之思考，然而夜已深，昏昏欲睡，便就此搁笔，待他日记起再叙。&lt;/p&gt;

&lt;p&gt;2017.08.05 凌晨 于佛山&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/06/post01/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/06/post01/</guid>
        
        <category>生活</category>
        
        <category>文艺</category>
        
        
      </item>
    
  </channel>
</rss>
